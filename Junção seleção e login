import tkinter as tk
from tkinter import messagebox
from tkinter import ttk

# Dicionários para armazenar usuários
usuarios_cliente = {}
usuarios_empresa = {}

def fazer_login_empresa():
    usuario = nome_usuario.get()
    senha = senha_entry.get()
    
    if usuario in usuarios_empresa and usuarios_empresa[usuario] == senha:
        messagebox.showinfo("Login", f"Bem-vindo, {usuario}!")
        janela.destroy()  # Fecha a janela de login
        # Aqui você chamará a função para abrir o sistema de estoque
    else:
        messagebox.showerror("Erro", "Nome de usuário ou senha incorretos. Tente novamente.")

def fazer_login_cliente():
    usuario = nome_usuario.get()
    senha = senha_entry.get()
    
    if usuario in usuarios_cliente and usuarios_cliente[usuario] == senha:
        messagebox.showinfo("Login", f"Bem-vindo, {usuario}!")
        janela.destroy()  # Fecha a janela de login
        # Aqui você chamará a função para abrir a loja
    else:
        messagebox.showerror("Erro", "Nome de usuário ou senha incorretos. Tente novamente.")

def criar_conta(tipo_usuario):
    nova_janela = tk.Toplevel(janela)
    nova_janela.title("Criar Conta")
    nova_janela.geometry("300x300")

    tk.Label(nova_janela, text="Informe um nome de usuário:", font=('Arial', 9, 'bold')).pack(pady=10)
    entrada_usuario = tk.Entry(nova_janela, width=30)
    entrada_usuario.pack(pady=5)

    tk.Label(nova_janela, text="Informe uma senha:", font=('Arial', 9, 'bold')).pack(pady=10)
    entrada_senha = tk.Entry(nova_janela, show='*', width=30)
    entrada_senha.pack(pady=5)

    def salvar_conta():
        usuario = entrada_usuario.get()
        senha = entrada_senha.get()
        if tipo_usuario == "empresa":
            if usuario in usuarios_empresa:
                messagebox.showerror("Erro", "Usuário já existe. Tente outro nome.")
            else:
                usuarios_empresa[usuario] = senha
                messagebox.showinfo("Sucesso", "Conta empresarial criada com sucesso!")
                nova_janela.destroy()
        else:
            if usuario in usuarios_cliente:
                messagebox.showerror("Erro", "Usuário já existe. Tente outro nome.")
            else:
                usuarios_cliente[usuario] = senha
                messagebox.showinfo("Sucesso", "Conta de cliente criada com sucesso!")
                nova_janela.destroy()

    tk.Button(nova_janela, text="Criar", command=salvar_conta).pack(pady=10)

def abrir_recuperacao_senha():
    nova_janela = tk.Toplevel(janela)
    nova_janela.title("Recuperação de Senha")
    nova_janela.geometry("300x200")

    tk.Label(nova_janela, text="Digite seu e-mail para recuperação:", font=('Arial', 9, 'bold')).pack(pady=10)
    entrada_email = tk.Entry(nova_janela, width=30)
    entrada_email.pack(pady=5)

    tk.Button(nova_janela, text="Enviar", command=lambda: print("E-mail enviado para:", entrada_email.get())).pack(pady=10)

def criar_janela_login(tipo_usuario):
    global janela, nome_usuario, senha_entry
    janela = tk.Tk()
    janela.title(f"Login - {'Empresarial' if tipo_usuario == 'empresa' else 'Cliente'}")
    janela.geometry("500x400")
    janela.configure(bg='#0065CC')

    nome_loja = tk.Label(janela, text="TECNOPOINT", font=('Cooper Black', 20, 'bold'), 
                        fg='white', bg='#0065CC')
    nome_loja.pack(pady=(50, 5))

    frame = tk.Frame(janela, bg='white', padx=20, pady=20, borderwidth=2, relief="groove")
    frame.pack(expand=True)

    mensagem = tk.Label(frame, text="Nome de usuário", font=('Arial', 9, 'bold'), 
                       fg='black', bg='white', width=25, height=1)
    mensagem.grid(row=0, column=0, pady=(0, 5))

    nome_usuario = tk.Entry(frame, width=30, bg='white')
    nome_usuario.grid(row=1, column=0, pady=(0, 10))

    mensagem2 = tk.Label(frame, text="Digite sua senha", font=('Arial', 9, 'bold'), 
                        fg='black', bg='white', width=25, height=1)
    mensagem2.grid(row=2, column=0, pady=(0, 5))

    senha_entry = tk.Entry(frame, show='*', width=30, bg='white')
    senha_entry.grid(row=3, column=0, pady=(0, 10))

    botao = tk.Button(frame, text="Entrar", width=10,
                     command=fazer_login_empresa if tipo_usuario == 'empresa' else fazer_login_cliente)
    botao.grid(row=4, column=0, pady=(10, 5))

    menu_opcoes = tk.Menubutton(frame, text="Mais...", relief="raised", fg='black', bg='white')
    menu_opcoes.menu = tk.Menu(menu_opcoes, tearoff=0)
    menu_opcoes["menu"] = menu_opcoes.menu

    menu_opcoes.menu.add_command(label="Criar conta", 
                                command=lambda: criar_conta(tipo_usuario))
    menu_opcoes.menu.add_command(label="Esqueci minha senha", 
                                command=abrir_recuperacao_senha)

    menu_opcoes.grid(row=5, column=0, pady=(5, 0))

def selecionar_tipo():
    janela_selecao = tk.Tk()
    janela_selecao.title("TECNOPOINT - Selecione o tipo de acesso")
    janela_selecao.geometry("400x300")
    janela_selecao.configure(bg='#0065CC')

    tk.Label(janela_selecao, text="TECNOPOINT", font=('Cooper Black', 20, 'bold'), 
            fg='white', bg='#0065CC').pack(pady=(30,20))

    tk.Label(janela_selecao, text="Selecione o tipo de acesso:", 
            font=('Arial', 12, 'bold'), fg='white', bg='#0065CC').pack(pady=10)

    def abrir_login_empresa():
        janela_selecao.destroy()
        criar_janela_login('empresa')

    def abrir_login_cliente():
        janela_selecao.destroy()
        criar_janela_login('cliente')

    tk.Button(janela_selecao, text="Empresa", width=20, height=2,
              command=abrir_login_empresa).pack(pady=10)
    tk.Button(janela_selecao, text="Cliente", width=20, height=2,
              command=abrir_login_cliente).pack(pady=10)

    janela_selecao.mainloop()

if __name__ == "__main__":
    selecionar_tipo()
